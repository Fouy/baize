<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.moguhu.baize.metadata.mapper.backend.ComponentEntityMapper" >
  <resultMap id="BaseResultMap" type="com.moguhu.baize.metadata.entity.backend.ComponentEntity" >
    <id column="comp_id" property="compId" jdbcType="BIGINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="modify_time" property="modifyTime" jdbcType="TIMESTAMP" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="comp_code" property="compCode" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
    <result column="content_id" property="contentId" jdbcType="BIGINT" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="version" property="version" jdbcType="VARCHAR" />
    <result column="exec_position" property="execPosition" jdbcType="VARCHAR" />
    <result column="priority" property="priority" jdbcType="INTEGER" />
    <result column="info" property="info" jdbcType="VARCHAR" />
    <result column="ext_info" property="extInfo" jdbcType="VARCHAR" />
  </resultMap>

  <sql id="Base_Column_List" >
    comp_id, create_time, modify_time, `name`, comp_code, `type`, content_id, `status`, version, exec_position,
    priority, info, ext_info
  </sql>

  <select id="selectById" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from component
    where comp_id = #{compId,jdbcType=BIGINT}
  </select>

  <delete id="deleteById" parameterType="java.lang.Long" >
    delete from component
    where comp_id = #{compId,jdbcType=BIGINT}
  </delete>

  <insert id="insert" parameterType="com.moguhu.baize.metadata.entity.backend.ComponentEntity" useGeneratedKeys="true" keyProperty="compId" >
    insert into component
    <trim prefix="(" suffix=")" suffixOverrides="," >
        create_time,
        modify_time,
      <if test="name != null" >
        `name`,
      </if>
      <if test="compCode != null" >
        `comp_code`,
      </if>
      <if test="type != null" >
        `type`,
      </if>
      <if test="contentId != null" >
        content_id,
      </if>
      <if test="status != null" >
        `status`,
      </if>
      <if test="version != null" >
        version,
      </if>
      <if test="execPosition != null" >
        exec_position,
      </if>
      <if test="priority != null" >
        priority,
      </if>
      <if test="info != null" >
        info,
      </if>
      <if test="extInfo != null" >
        ext_info,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
        NOW(),
        NOW(),
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="compCode != null" >
        #{compCode,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="contentId != null" >
        #{contentId,jdbcType=BIGINT},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="version != null" >
        #{version,jdbcType=VARCHAR},
      </if>
      <if test="execPosition != null" >
        #{execPosition,jdbcType=VARCHAR},
      </if>
      <if test="priority != null" >
        #{priority,jdbcType=INTEGER},
      </if>
      <if test="info != null" >
        #{info,jdbcType=VARCHAR},
      </if>
      <if test="extInfo != null" >
        #{extInfo,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>

  <update id="updateById" parameterType="com.moguhu.baize.metadata.entity.backend.ComponentEntity" >
    update component
    <set >
        modify_time = NOW(),
      <if test="name != null" >
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="compCode != null" >
        `comp_code` = #{compCode,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        `type` = #{type,jdbcType=VARCHAR},
      </if>
      <if test="contentId != null" >
        content_id = #{contentId,jdbcType=BIGINT},
      </if>
      <if test="status != null" >
        `status` = #{status,jdbcType=VARCHAR},
      </if>
      <if test="version != null" >
        version = #{version,jdbcType=VARCHAR},
      </if>
      <if test="execPosition != null" >
        exec_position = #{execPosition,jdbcType=VARCHAR},
      </if>
      <if test="priority != null" >
        priority = #{priority,jdbcType=INTEGER},
      </if>
      <if test="info != null" >
        info = #{info,jdbcType=VARCHAR},
      </if>
      <if test="extInfo != null" >
        ext_info = #{extInfo,jdbcType=VARCHAR},
      </if>
    </set>
    where comp_id = #{compId,jdbcType=BIGINT}
  </update>

  <!-- 查询列表 -->
  <select id="queryAll" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from component
    where 1=1
    <if test="status != null and status != '' " >
      and `status` = #{status,jdbcType=VARCHAR}
    </if>
    <if test="name != null and name != '' " >
      and `name` like CONCAT('%', #{name,jdbcType=VARCHAR}, '%')
    </if>
  </select>

  <!-- 加锁 -->
  <select id="lock" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select
    <include refid="Base_Column_List" />
    from component
    where comp_id = #{compId,jdbcType=BIGINT} for update
  </select>

  <!-- 根据 groupId 查询组件 -->
  <select id="queryByApiGroup" resultMap="BaseResultMap" >
    SELECT
        t1.comp_id as comp_id ,
        t1.create_time as create_time ,
        t1.modify_time as modify_time ,
        t1.`name` as `name` ,
        t1.comp_code as comp_code ,
        t1.`type` as `type` ,
        t1.content_id as content_id ,
        t1.`status` as `status` ,
        t1.version as version ,
        t1.exec_position as exec_position ,
        t1.priority as priority ,
        t1.info as info ,
        t1.ext_info as ext_info
    FROM
        component t1
    LEFT JOIN group_comp_rela t2 ON t1.comp_id = t2.comp_id
    WHERE
        t2.group_id = #{groupId,jdbcType=BIGINT}
  </select>

  <!-- 根据 apiId 查询组件 -->
  <select id="queryByApi" resultMap="BaseResultMap" >
    SELECT
        t1.comp_id as comp_id ,
        t1.create_time as create_time ,
        t1.modify_time as modify_time ,
        t1.`name` as `name` ,
        t1.comp_code as comp_code ,
        t1.`type` as `type` ,
        t1.content_id as content_id ,
        t1.`status` as `status` ,
        t1.version as version ,
        t1.exec_position as exec_position ,
        t1.priority as priority ,
        t1.info as info ,
        t1.ext_info as ext_info
    FROM
        component t1
    LEFT JOIN api_comp_rela t2 ON t1.comp_id = t2.comp_id
    WHERE
        t2.api_id = #{apiId,jdbcType=BIGINT}
  </select>

</mapper>